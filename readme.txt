Тестовое задание:
-----------------
Есть веб-api, непрерывно принимающее события (ограничимся 10000 событий) для группы аккаунтов (1000 аккаунтов) и складывающее их в очередь.
Каждое событие связано с определенным аккаунтом и важно, чтобы события аккаунта обрабатывались в том же порядке, в котором поступили в очередь.
Обработка события занимает 1 секунду (эмулировать с помощью sleep).
Веб-api и очередь эмулировать консольным скриптом, непрерывно генерирующим события для обработки в фоне. События генерировать пачками, содержащими последовательности по 1-10 для каждого аккаунта.
Сделать обработку очереди событий максимально быстрой на данной конкретной машине.



Реализация:
-----------
Параллельная обработка очереди сообщений в порядке поступления.
Сообщения с одинаковыми clientId обрабатываются последовательно.
Сверх требований задания реализована возможность ограничения количества параллельных потоков, т.к. часто необходимо ограничивать выделяемые ресурсы.
Результаты работы алгориитма пишутся в лог-файлы.



Особенности реализации:
-----------------------
 - классы + автозагрузка классов;
 - статичные методы и константы;
 - трейты;
 - запуск фоновых процессов + контроль состояния.



Что можно улучшить:
-------------------
 - добавить взаимодействие с фоновыми процессами обработки сообщений через pipes (для передачи данных сообщения, получения обратной связи);
 - добавить усточивость к потере данных в случае ошибок обработки (сохранение сообщения после удаления из очереди и до окончания обработки).


Время, затраченное на реализацию: 12ч
